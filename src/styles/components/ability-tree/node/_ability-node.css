/* src/styles/components/ability-tree/node/_ability-node.css */

.ability-node {
    background-color: var(--color-panel-bg);
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius);
    width: 80px;
    height: 80px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: all 0.2s ease-in-out;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: var(--spacing-1);
    text-align: center;
    cursor: pointer;
    outline-offset: 3px;
    position: relative; /* Needed for pseudo-elements */
}

.react-flow__node.selected .ability-node {
    outline: 3px solid var(--color-accent);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
}

.ability-node__icon-container {
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: var(--spacing-1);
    position: relative;
}

.ability-node__icon {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: calc(var(--border-radius) / 2);
}

.ability-node__icon-placeholder {
    color: var(--color-muted-foreground);
    position: absolute;
    opacity: 1;
    transition: opacity 0.2s ease;
}

.ability-node__icon-container:not(.error) .ability-node__icon + .ability-node__icon-placeholder {
    opacity: 0;
}

.ability-node__icon-container.error .ability-node__icon {
    display: none;
}

.ability-node__title {
    font-size: 0.75rem; /* 12px */
    font-weight: 600;
    color: var(--color-foreground);
    margin: 0;
    line-height: 1.2;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    width: 70px;
}

/* --- ERGONOMICS: Larger Handle Hitbox --- */
.ability-node__handle {
    width: 8px !important;
    height: 8px !important;
    background-color: var(--color-accent) !important;
    border: 2px solid var(--color-background) !important;
    z-index: 11; /* Ensure visual part is on top */
}

/* Create a large, invisible pseudo-element for easier clicking */
.ability-node__handle::after {
    content: '';
    position: absolute;
    top: -16px;
    left: -16px;
    width: 40px;
    height: 40px;
    background-color: transparent;
    border-radius: 50%;
    z-index: 10;
    transform: translate(0, 0); /* Fix for positioning */
}

/* --- ERGONOMICS: Connection Target Highlighting --- */
/* This class will be added to the React Flow instance */
.react-flow.connection-in-progress .react-flow__handle.react-flow__handle-target {
    background-color: var(--color-success) !important;
    transform: scale(1.5);
    transition: transform 0.2s ease;
}
