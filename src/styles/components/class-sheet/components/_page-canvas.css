/* src/styles/components/class-sheet/components/_page-canvas.css */

/**
 * COMMIT: fix(class-sheet): resolve final rendering bug by correcting layout paradox
 *
 * Rationale:
 * The root cause of the invisible canvas was a CSS paradox. The zoom library's
 * wrapper used `height: fit-content`, but its direct child was styled with
 * `height: 100%`, creating a circular dependency that collapsed the layout.
 *
 * Implementation Details:
 * - The styles for centering and padding (`display: flex`, `padding`) have been
 * moved from the inner `.page-canvas__transform-content` to the outer
 * `.page-canvas__transform-wrapper`.
 * - The inner content wrapper is no longer needed and its styles have been removed.
 * - This ensures the `fit-content` wrapper's direct child is the
 * `.page-canvas__page`, which has explicit pixel dimensions, breaking the
 * paradox and allowing the layout to render correctly.
 */

.page-canvas__container {
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: var(--color-background);
}

.page-canvas__page {
    background-color: var(--color-panel-bg);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    position: relative;
    width: 1000px;
    height: 1414px; /* A4-ish ratio (1 * 1.414) */
    flex-shrink: 0; /* Prevent the page from shrinking */
}

.sheet-block-wrapper {
    width: 100%;
    height: 100%;
    background-color: transparent;
    overflow: hidden;
}

/* --- React Grid Layout Overrides --- */

.react-grid-item > .react-resizable-handle {
    background-image: none;
    border: 2px solid var(--color-accent);
    background-color: var(--color-background);
    border-radius: 50%;
    width: 14px;
    height: 14px;
    bottom: -7px;
    right: -7px;
}

.react-grid-item.react-grid-placeholder {
    background: var(--color-accent) !important;
    opacity: 0.2 !important;
    border-radius: var(--border-radius);
}

/* --- Visual Feedback Styles --- */

.sheet-block-wrapper--selected {
    box-shadow: 0 0 0 2px var(--color-accent);
    z-index: 10;
}

.react-grid-item.react-draggable-dragging .sheet-block-wrapper {
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
    z-index: 20;
    cursor: grabbing;
}

.react-grid-item.react-draggable-dragging .sheet-block-wrapper--selected {
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3), 0 0 0 2px var(--color-accent);
}

/* --- Zoom & Pan Controls & Wrappers --- */

.page-canvas__controls {
    position: absolute;
    right: 10px;
    z-index: 10;
    display: flex;
    gap: var(--spacing-2);
    background-color: var(--color-panel-bg);
    padding: var(--spacing-2);
    border-radius: var(--border-radius);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    border: 1px solid var(--color-border);
}

/* REWORK: This outer wrapper now handles centering and padding */
.page-canvas__transform-wrapper {
    width: 100%;
    height: 100%;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    padding: var(--spacing-8);
}
